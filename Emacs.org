#+title Emacs config
#+PROPERTY: header-args:emacs-lisp :tangle ~/projects/emacs/.emacs.d/init.el

* Environment Variables
#+begin_src emacs-lisp
  ;--- Environment variables ---
  ;--- Editor Styling ---
  (setq satori-font-size 160)                                   ;; font-size
  ;--- Themes ---
  (setq satori-theme 'tango-dark)
  ;--- UI Elements ---
  (setq satori-tool-bar 0)                                      ;; tool bar
  (setq satori-menu-bar 0)                                      ;; menu bar
  (setq satori-scroll-bar 0)                                    ;; scroll bar
  (setq satori-fringe-mode-padding 0)                           ;; horizontal padding
  ;; --- General Settings ---
  (setq satori-backups nil)
  ;; --- use-package ---
  (setq use-package-always-ensure t)                            ;; auto-install missing packages
  ;; --- Org Roam ---
  (setq satori-org-roam-directory "~/projects/satori-notes")    ;; org roam notes directory

#+end_src 
* Packages
** Todoes [0/2]
*** TODO What does package-initialise do?
*** TODO What does  (unless package-archive-contents (package-refresh-contents)) do?
** Config 
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
               '("melpa" . "http://melpa.org/packages/") t)

  (package-initialize)
  (unless package-archive-contents (package-refresh-contents))    ;; update packages
#+end_src
* Visuals 
** Theme
#+begin_src emacs-lisp
(load-theme satori-theme t)
#+end_src
** Font Size
#+begin_src emacs-lisp
(set-face-attribute 'default nil :height satori-font-size)
#+end_src
** UI Elements
#+begin_src emacs-lisp
(tool-bar-mode satori-tool-bar)
(menu-bar-mode satori-menu-bar)			
(scroll-bar-mode satori-scroll-bar)
(set-fringe-mode satori-fringe-mode-padding)
#+end_src
** Modeline
#+begin_src emacs-lisp
  ;; --- modeline settings ---
  (display-time-mode 1)                   ;; display time 
#+end_src
** Line Numbers
#+begin_src emacs-lisp
(global-display-line-numbers-mode t)

(defun satori-disable-line-numbers ()
   (display-line-numbers-mode 0))
#+end_src
* General Settings
** Backups
Do more testing and research on make-backup-files
#+begin_src emacs-lisp
(setq make-backup-files satori-backups)
#+end_src
* Project Management
** project.el
** projectile
* Plugins 
** Evil (vim)
#+begin_src emacs-lisp
  (use-package evil
    :init
    (setq evil-want-C-u-scroll t)
    :config
    (evil-mode 1)
    (setq select-enable-clipboard t)
    (define-key evil-insert-state-map (kbd "C-h") 'evil-delete-backward-char-and-join)
    (evil-define-key 'normal org-mode-map (kbd "<tab>") #'org-cycle)
  )

#+end_src
** Org Roam 
#+begin_src emacs-lisp
  (use-package org-roam
    :bind(("C-c n l" . org-roam-buffer-toggle)
          ("C-c n f" . org-roam-node-find)
          ("C-c n i" . org-roam-node-insert)
          ("C-c d c" . org-roam-dailies-capture-today)
          ("C-c d s" . org-roam-dailies-goto-today)
          )
    :config
    (setq org-roam-directory satori-org-roam-directory))
#+end_src
* Org-mode
#+begin_src emacs-lisp
 
  (add-hook 'org-mode-hook 'satori-disable-line-numbers)
#+end_src
* Hooks
** eshell
#+begin_src emacs-lisp
(add-hook 'eshell-mode-hook 'satori-disable-line-numbers)
#+end_src
